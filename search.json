[
  {
    "objectID": "docs/owners.html#properties-with-many-owners-and-owners-with-many-properties",
    "href": "docs/owners.html#properties-with-many-owners-and-owners-with-many-properties",
    "title": "Finding property owners",
    "section": "Properties with many owners and owners with many properties",
    "text": "Properties with many owners and owners with many properties\n\n\nProperties with many owners\nmatch (o:OWNER) - [r:TAX_ASSESSOR_OWNER] -> (b:BBL)\nwhere o.name <> \"UNAVAILABLE OWNER\"\nwith b, count(r) as rel_count, collect(o) as o\nwhere rel_count > 1\nreturn b, o\n\nOwners with many properties\nmatch (o:OWNER) - [r:TAX_ASSESSOR_OWNER] -> (b:BBL)\nwhere o.name <> \"UNAVAILABLE OWNER\"\nwith o, count(r) as rel_count, collect(b) as b\nwhere rel_count > 1\nreturn b, o"
  },
  {
    "objectID": "docs/owners.html#shortest-path-from-llc-to-phones",
    "href": "docs/owners.html#shortest-path-from-llc-to-phones",
    "title": "Finding property owners",
    "section": "Shortest path from LLC to Phones",
    "text": "Shortest path from LLC to Phones\nWhich LLC owns the most properties?\nmatch (owner:OWNER) - [] ->(b:BBL)\nwith owner, count(b) as n_properties\nwhere owner.name contains \"LLC\"\nreturn owner, n_properties\norder by n_properties desc\n\nFind the shorted path between a LLC and a Phone node\nmatch (o:OWNER), (p:PHONE),  path = shortestPath((o)-[*]-(p))\nwhere o.name CONTAINS \"LLC\" and length(path) < 5\nreturn path"
  },
  {
    "objectID": "docs/embedding.html",
    "href": "docs/embedding.html",
    "title": "Embeddings",
    "section": "",
    "text": "We’ll apply node2vec to extract vector representations from the property nodes. This algorithms creates node embeddings that put connected nodes near each other (as measured by the vector space distance metric) and nodes that do not share a connection farther away.\n// omit other hyperparameters for brevity\nCALL gds.beta.node2vec.write(\n    'nyc2',\n    {embeddingDimension: 64, walksPerNode: 10, walkLength: 80, writeProperty: \"embedding\"}\n)\nDisplay the embeddings\nmatch (b:BBL)\nreturn b.address, b.embedding"
  },
  {
    "objectID": "docs/embedding.html#visualize-embeddings-with-t-sne",
    "href": "docs/embedding.html#visualize-embeddings-with-t-sne",
    "title": "Embeddings",
    "section": "Visualize embeddings with t-SNE",
    "text": "Visualize embeddings with t-SNE"
  },
  {
    "objectID": "docs/embedding.html#k-nearest-neighbors",
    "href": "docs/embedding.html#k-nearest-neighbors",
    "title": "Embeddings",
    "section": "K nearest neighbors",
    "text": "K nearest neighbors\nCALL gds.knn.write('nyc2', {\n    topK: 2,\n    nodeProperties: ['embedding'],\n    randomSeed: 42,\n    concurrency: 1,\n    sampleRate: 1.0,\n    deltaThreshold: 0.0,\n    writeRelationshipType: \"SIMILAR\",\n    writeProperty: \"score\"\n})\nYIELD nodesCompared, relationshipsWritten, similarityDistribution\nRETURN nodesCompared, relationshipsWritten, similarityDistribution.mean as meanSimilarity"
  },
  {
    "objectID": "docs/embedding.html#most-similar-pairs",
    "href": "docs/embedding.html#most-similar-pairs",
    "title": "Embeddings",
    "section": "Most similar pairs",
    "text": "Most similar pairs\nmatch (b1:BBL) -[r:SIMILAR] -> (b2:BBL)\nwhere  b1.address is not null and b2.address is not  null\nreturn b1.address as property_1, b2.address as property_2, r.score as similarity\norder by similarity descending, property_1, property_2\n\nFind the most similar properties to 1 EAST 35 STREET RES NYC NY 10016\nmatch (b1:BBL {address: \"1 EAST 35 STREET RES NYC NY 10016\"}) - [r:SIMILAR] -> (b2:BBL)\nwhere b2.address is not null\nreturn b1.address as target, b2.address as recommendations, r.score as similarity\norder by similarity descending"
  },
  {
    "objectID": "docs/data.html",
    "href": "docs/data.html",
    "title": "Modelling Real Estates with Graphs",
    "section": "",
    "text": "Imagine we are working for a commercial real estate company and trying to organize our data to solve two problems\n\nwe want to keep in contact with potential future sellers, we have a list of properties and their owners, but lots of the properties are officially own by a LLC entity lacking of a real person to contact.\nIf a buyer visits our website, we want to have a recommendation system that suggests similar properties to the one he is looking at."
  },
  {
    "objectID": "docs/data.html#data",
    "href": "docs/data.html#data",
    "title": "Modelling Real Estates with Graphs",
    "section": "Data",
    "text": "Data\nThis project uses public data from NYC Open Data with a limited focus on properties in Manhattan.\n\nTax Assessment: assessments for purpose to calculate Property Tax. NYC organizes tax lots using the BOROUGH-BLOCK-LOT (BBL) system, where BOROUGH is a 1 digit number (BOROUGH = 1 is Manhattan), BLOCK is 5 digits, and LOT is 4 digits. BBL is used as a the unique property identifier across all 3 datasests. For example, the Empire State Building is in Manhattan (borough = 1), block is 835 (zero-padded to 00835), and lot is 0041 (zero-padded to 0041), giving a BBL of 1008350041.\n\n\nRows: 12,989\nColumns: 3\n$ bbl                  <chr> \"1005591001\", \"1005597502\", \"1007227501\", \"100803…\n$ tax_owner_name       <chr> \"WANG, MICHEL S\", \"UNAVAILABLE OWNER\", \"UNAVAILAB…\n$ tax_property_address <chr> \"137 EAST 37 STREET 1A NYC NY 10016\", \"137 EAST 3…\n\n\nDeeds: legal documents produced during the transfer of real estate from one party to another\n\n\nRows: 10,845\nColumns: 5\n$ bbl                <chr> \"1008942081\", \"1008942081\", \"1008591119\", \"10121211…\n$ deed_id            <chr> \"2015071700095001\", \"2015071700095001\", \"2015081101…\n$ deed_date          <chr> \"07/07/2015\", \"07/07/2015\", \"08/05/2015\", \"07/21/20…\n$ deed_owner_name    <chr> \"CYRIAC, GEORGE\", \"CYRIAC, CHACKUMKAL V\", \"11 EAST …\n$ deed_owner_address <chr> \"325 LEXINGTON AVENUE  NEW YORK NY 10016\", \"325 LEX…\n\n\nBuilding Permits: approved building permits that allow the property owner to make structural changes (e.g. add a window, install a new plumbing system, etc).\n\n\nRows: 3,667\nColumns: 6\n$ bbl                        <chr> \"1008030041\", \"1008040016\", \"1008300080\", \"…\n$ permit_date                <chr> \"07/09/2020\", \"10/09/2020\", \"07/14/2020\", \"…\n$ permit_owner_name          <chr> \"JOANNA THEOFANIS\", \"HAE CHUNG\", \"SAMUEL RO…\n$ permit_owner_address       <chr> \"8056TH AVENUEMANHATTANNY10001\", \"533BERGEN…\n$ permit_owner_business_name <chr> \"P.T REAL ESTATE HOLDING LLC\", NA, \"828 6TH…\n$ permit_owner_phone         <chr> \"2129359184\", \"2013963337\", \"2126794065\", \"…"
  }
]